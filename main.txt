#Q1. Why do we call Python as a general purpose and high-level programming language?

Python is an object-oriented, high-level programming language.
Object-oriented means this language is based around objects (such as data) rather than functions,
and high-level means it's easy for humans to understand.


Q2. Why is Python called a dynamically typed language?

Python don't have any problem even if we don't declare the type of variable.
It states the kind of variable in the runtime of the program. Python also take cares of the memory management which is crucial in programming.
So, Python is a dynamically typed language.


Q3. List some pros and cons of Python programming language?

Pros -  Beginner-friendly,Large Community,Flexible and Extensible,Extensive Libraries
Cons - High memory consumption,Dynamically-typed language,Slower than compiled languages


Q4. In what all domains can we use Python?

Data Science,Automation,Web Development,AI & Machine Learning , Desktop GUI

Q5. What are variable and how can we declare them?

Variables are containers for storing data values.Python has no command for declaring a variable.
A variable is created the moment you first assign a value to it.


Q6. How can we take an input from the user in Python?

In Python, we use input() function to take input from the user.


Q7. What is the default datatype of the value that has been taken as an input using input() function?

Whatever you enter as input, the input function converts it into a string. 
If you enter an integer value still input() function convert it into a string.

Q8. What is type casting?

Type Casting is the method to convert the variable data type into a certain data type in order to the operation required to be performed by users.

Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?

Python user can take multiple values or inputs in one line by two methods. 
Using split() method
Using List comprehension


Q10. What are keywords?

Keywords in Python are reserved words that can not be used as a variable name, function name, or any other identifier.

Q11. Can we use keywords as a variable? Support your answer with reason.

The keyword cannot be used as an identifier, function, and variable name

Q12. What is indentation? What's the use of indentaion in Python?

Indentation refers to the spaces at the beginning of a code line. 
Where in other programming languages the indentation in code is for readability only, the indentation in Python is very important.
Python uses indentation to indicate a block of code.


Q13. How can we throw some output in Python?

Python print() function prints the message to the screen or any other standard output device.

Q14. What are operators in Python?

In Python, operators are special symbols that designate that some sort of computation should be performed. The values that an operator acts on are called operands. 

Q15. What is difference between / and // operators?

'/' and '//' belong to the arithmetic operators.
'/' is used for the normal division of two numbers.
'//' is used to obtain the smallest integer nearest to the quotient obtained by dividing two numbers.

Q16. Write a code that gives following as an output. iNeuroniNeuroniNeuroniNeuron

print("iNeuroniNeuroniNeuroniNeuron")

Q17. Write a code to take a number as an input from the user and check if the number is odd or even.

n=int(input())

if(n%2==0):
    print("even")
else:
    print("odd")


Q18. What are boolean operator?

Boolean Operators are those that result in the Boolean values of True and False .These include and, or and not .

Q19. What will the output of the following?

1 or 0 => 1

0 and 0 => 0 

True and False and True => False

1 or 0 or 0 => 1

Q20. What are conditional statements in Python?

A conditional statement as the name suggests itself, is used to handle conditions in your program.
These statements guide the program while making decisions based on the conditions encountered by the program.

Q21. What is use of 'if', 'elif' and 'else' keywords?

If: If is a keyword used to check if the condition is true or not and execute the corresponding statement .
elif : Used if the 'if' condition is not satisfied then check the remaining condition and print the corresponding statement then elif is used .
else : if the 'if' condition is not satisfied then the statment corresponding to the 'else' block will be executed .

Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".

age=int(input("Enter your age"))

if age >= 18:
    print("I can vote")
else:
    print("I can't vote")

Q23. Write a code that displays the sum of all the even numbers from the given list. numbers = [12, 75, 150, 180, 145, 525, 50]

numbers = [12, 75, 150, 180, 145, 525, 50]
sum=0
for i in numbers:
    if i%2==0:
        sum+=i
print(sum)

Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.

x=int(input())
y=int(input())
z=int(input())

if (x>y) and (x>z):
    print("x is greatest",x)
elif (y>x) and (y>z):
    print("y is greatest",y)
else:
    print("z is greatest",z)

Q25. Write a program to display only those numbers from a list that satisfy the following conditions
The number must be divisible by five
If the number is greater than 150, then skip it and move to the next number
If the number is greater than 500, then stop the loop

numbers = [12, 75, 150, 180, 145, 525, 50]

div_five = [x for x in numbers if x%5==0]
greater = [y for y in div_five if y<150]
final=[]

for i in greater:
    if(i<500):
        final.append(i)
    else:
        break

print(final)


Q26. What is a string? How can we declare string in Python?

Like many other popular programming languages, strings in Python are arrays of bytes representing unicode characters.
Strings in python are surrounded by either single quotation marks, or double quotation marks.

Q27. How can we access the string using its index?

Square brackets can be used to access elements of the string.
a = "Hello, World!"
print(a[1])

Q28. Write a code to get the desired output of the following
string = "Big Data iNeuron"
desired_output = "iNeuron"

string = "Big Data iNeuron"
print(string.split()[-1])

Q30. Resverse the string given in the above question.

string = "Big Data iNeuron"
print(string[::-1])

Q31. How can you delete entire string at once?

string = "Big Data iNeuron"
del string


Q32. What is escape sequence?

Escape sequences allow us to include special characters in strings. To do this, simply add a backslash (\) before the character you want to escape.

Q33. How can you print the below string?
'iNeuron's Big Data Course'

string = "'iNeuron's Big Data Course'"
print(string)

Q34. What is a list in Python?

Lists are used to store multiple items in a single variable.
Lists are one of 4 built-in data types in Python used to store collections of data

Q35. How can you create a list in Python?

Lists are created using square brackets:
thislist = ["apple", "banana", "cherry"]

Q36. How can we access the elements in a list?

List items are indexed and we can access them by referring to the index number.

Q37. Write a code to access the word "iNeuron" from the given list.
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]

lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
print(lst[4][2])

Q38. Take a list as an input from the user and find the length of the list.

lst = []
n = int(input("Enter number of elements : "))

for i in range(0, n):
    ele = int(input())
    lst.append(ele) 
      
print(lst)


Q39. Add the word "Big" in the 3rd index of the given list.
lst = ["Welcome", "to", "Data", "course"]

lst = ["Welcome", "to", "Data", "course"]
lst.insert(2,"Big")
print(lst)

Q40. What is a tuple? How is it different from list?
Tuples are used to store multiple items in a single variable. 
The primary difference between tuples and lists is that tuples are immutable as opposed to lists which are mutable. 
Therefore, it is possible to change a list but not a tuple.
The contents of a tuple cannot change once they have been created in Python due to the immutability of tuples.

Q41. How can you create a tuple in Python?

To create a tuple , you have to add a comma after the item, otherwise Python will not recognize it as a tuple and enclosed in braces.
tuple = ("apple", "banana", "cherry")

Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.

No we cannot add our name to tuple since tuple are immutable and cannot be changed after creation.

Q43. Can two tuple be appended. If yes, write a code for it. If not, why?

No two tuple cannot be appended since tuples are immutable after creation.

Q44. Take a tuple as an input and print the count of elements in it.

t2 = (20,30,40,50)
print(len(t2))

Q45. What are sets in Python?

Sets are used to store multiple items in a single variable.Sets cannot have two items with the same value.
It prevents duplocate value.

Q46. How can you create a set?

Sets are written with curly brackets.
thisset = {"apple", "banana", "cherry"}

Q47. Create a set and add "iNeuron" in your set.
thisset = {"apple", "banana", "cherry"}
thisset.add("iNeuron")

Q48. Try to add multiple values using add() function.

We cannot add multiple value using add function at the same time .

Q49. How is update() different from add()?

Add an item to a set, using the add() method.
To add items from another set into the current set, use the update() method.

Q50. What is clear() in sets?

The clear() method empties the set.

Q51. What is frozen set?

The frozenset() function returns an immutable frozenset object initialized with elements from the given iterable.
Frozen set is just an immutable version of a Python set object. While elements of a set can be modified at any time, elements of the frozen set remain the same after creation.

Q52. How is frozen set different from set?

Frozen set is just an immutable version of a Python set object. While elements of a set can be modified at any time, elements of the frozen set remain the same after creation.

Q53. What is union() in sets? Explain via code.

Return a set that contains all items from both sets, duplicates are excluded.
x = {"apple", "banana", "cherry"}
y = {"google", "microsoft", "apple"}

z = x.union(y)

print(z)

Q54. What is intersection() in sets? Explain via code.

Return a set that contains the items that exist in both set x, and set y.
x = {"apple", "banana", "cherry"}
y = {"google", "microsoft", "apple"}

z = x.intersection(y)

print(z)

Q55. What is dictionary ibn Python?

Dictionaries are used to store data values in key:value pairs. A dictionary is a collection which is ordered*, changeable and do not allow duplicates.

Q56. How is dictionary different from all other data structures.

A dictionary is a general-purpose data structure for storing a group of objects. A dictionary has a set of keys and each key has a single associated value unlike other data structure 
in python where there is no key associated with it.

Q57. How can we delare a dictionary in Python?

Dictionaries are written with curly brackets, and have keys and values:
thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
print(thisdict)

Q58. What will the output of the following?
var = {}
print(type(var)) =>  <class 'dict'>

Q59. How can we add an element in a dictionary?

Adding an item to the dictionary is done by using a new index key and assigning a value to it:
thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
thisdict["color"] = "red"
print(thisdict)

Q60. Create a dictionary and access all the values in that dictionary.

car = {
"brand": "Ford",
"model": "Mustang",
"year": 1964
}
x = car.values()
print(x)


Q61.Create a nested dictionary and access all the element in the inner dictionary.

car = {
"brand": "Ford",
"model": "Mustang",
"year": 1964,
"model":{
    "year":1999,
    "expiry":2000
}
}
x = car['model']
print(x)

Q62. What is the use of get() function?

You can access the items of a dictionary by using get() function.
thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
x = thisdict.get("model")

Q63. What is the use of items() function?

Returns a list containing a tuple for each key value pair.
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
x = car.items()
print(x)

Q64. What is the use of pop() function?

Removes the element with the specified key
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
car.pop("model")
print(car)

Q65. What is the use of popitems() function?

Removes the last inserted key-value pair.

Q66. What is the use of keys() function?

Returns a list containing the dictionary's keys.

Q67. What is the use of values() function?

Returns a list of all the values in the dictionary

Q68. What are loops in Python?

Looping means repeating something over and over until a particular condition is satisfied. Eg: For loop, while loop.

Q69. How many type of loop are there in Python?

For Loop. A for loop in Python is used to iterate over a sequence .
While Loop. The while loop is used to execute a set of statements as long as a condition is true.

Q70. What is the difference between for and while loops?

For loop is used when the number of iterations is already known. While loop is used when the number of iterations is already Unknown. 

Q71. What is the use of continue statement?

With the continue statement we can stop the current iteration of the loop, and continue with the next:

Q72. What is the use of break statement?
With the break statement we can stop the loop before it has looped through all the items:

Q73. What is the use of pass statement?
for loops cannot be empty, but if you for some reason have a for loop with no content, put in the pass statement to avoid getting an error.

Q74. What is the use of range() function?
To loop through a set of code a specified number of times, we can use the range() function,
The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and ends at a specified number.

Q75. How can you loop over a dictionary?
You can loop through a dictionary by using a for loop.

Q76. Write a Python program to find the factorial of a given number.

x=4
sum=1
for i in range(1,x+1):
    sum*=i

print(sum)

Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (PRT)/100

Amount = 1000
Year = 12
Rate = 1.2
SI = (Amount*Year*Rate)/100
print("The simple interest is:", SI)

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.
def compound_interest(principal, rate, time):
 
Amount = principal * (pow((1 + rate / 100), time))
CI = Amount - principal
print("Compound interest is", CI)
compound_interest(10000, 10.25, 5)

Q79. Write a Python program to check if a number is prime or not.

x=10
check=0
for i in range(2,x):
    if x%i==0:
        check=1
        break
    else:
        continue
if check==1:
    print("Not a prime",x)
else:
    print("Prime Number",x)

Q80. Write a Python program to check Armstrong Number.

number = 1634
digits = len(str(number))
temp = number
add_sum = 0
while temp != 0:
    k = temp % 10
    add_sum += k**digits
    temp = temp//10
if add_sum == number:
    print('Given number is an Armstrong Number')
else:
    print('Given number is not a Armstrong Number')

Q81. Write a Python program to find the n-th Fibonacci Number.
def Fibonacci(n): 
    if n<0: 
        print("Incorrect input") 
    elif n==0: 
        return (0) 
    elif n==1: 
        return (1)
    else: 
        return (Fibonacci(n-1)+Fibonacci(n-2)) 
print(Fibonacci(10)) 

Q82. Write a Python program to interchange the first and last element in a list.

def swapList(newList):
    size = len(newList)
     
    # Swapping
    temp = newList[0]
    newList[0] = newList[size - 1]
    newList[size - 1] = temp
     
    return newList
     
newList = [12, 35, 9, 56, 24]
 
print(swapList(newList))

Q83. Write a Python program to swap two elements in a list.

def swapPositions(list, pos1, pos2):
     
    list[pos1], list[pos2] = list[pos2], list[pos1]
    return list
 
List = [23, 65, 19, 90]
pos1, pos2  = 1, 3
 
print(swapPositions(List, pos1-1, pos2-1))

Q84. Write a Python program to find N largest element from a list.

list = [21,34,43,12,54]
list.sort()

def largest(n):
    print(list[n-1])

largest(2)

Q85. Write a Python program to find cumulative sum of a list.
list = [10, 15, 20, 25, 30 ]
final=[]
sum=0
for x in list:
    sum+=x
    final.append(sum)

print(final)

Q86. Write a Python program to check if a string is palindrome or not.

my_str = 'aIbohPhoBiA'
my_str = my_str.casefold()
rev_str = reversed(my_str)
if list(my_str) == list(rev_str):
   print("The string is a palindrome.")
else:
   print("The string is not a palindrome.")

Q87. Write a Python program to remove i'th element from a string.

def remove(string, i):
 
    a = string[: i]

    b = string[i + 1:]

    return a + b
 

string = "geeksFORgeeks"
i = 5
print(remove(string, i))

Q88. Write a Python program to check if a substring is present in a giv
MyString1 = "sdfredsddfs"
 
if "sddas" in MyString1:
    print("Yes! it is present in the string")
else:
    print("No! it is not present")

Q89. Write a Python program to find words which are greater than given length k.

def word_k(k, s):    
    word = s.split(" ")
    for x in word:
        if len(x)>k:
          print(x)
k = 3
s ="Python is good"
word_k(k, s)

Q90. Write a Python program to extract unquire dictionary values.



